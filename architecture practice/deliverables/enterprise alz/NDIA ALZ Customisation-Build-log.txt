Azure Landing Zone (ALZ) customisation project
1) Project Scope & Objectives
1.1 Scope:
Phase 1 Focus:
Design least-privilege access matrices for all networking services
Create custom RBAC roles aligned with Microsoft CAF ALZ principles
Incorporate ASD Essential Eight, PSPF/ISMF, and IRAP compliance requirements
Support DevOps, App Platform, automation, and SRE team access models
Phase 2 Expansion:
Azure Policy definitions & initiatives for governance enforcement
Terraform modules for automated deployment (management groups, RBAC, networking)
GitOps & DevSecOps integration capabilities

1.2 Objectives:
Extensibility and reusability across multiple Australian Fed Gov agencies
Agency requirements adaptable via Variable-Based master record

1.3 Principles:
Reusable: across Defence, Home Affairs, Services Australia, etc.
Templated: approach for rapid agency onboarding
Consistent: structure while allowing customization
Scalable: for multiple agency implementations

1.4 ent-alz-customisation-package
Reusable ALZ customisation package that includes:
foundational template
Custom RBAC role definitions (JSON/Bicep)
Policy sets and assignments
Terraform modules for automation
Network security and monitoring baselines
Documentation and ADRs
GitHub Actions pipeline scaffolds

2) Architecture Understanding
2.1 RBAC Role Personas
2.2 Key Requirements 

2.3 Dependency Chain Analysis
Network Service Access Matrices → Custom RBAC Role Definitions → Terraform Modules
1. Granular Permission Mapping Required
2. Role-to-Service Mapping Needed
3. Compliance Requirements Drive Permissions

2.4 Implementation Approach
Multi-Agency Support
Agency specific requirements captured as part of a separate config file, agency-config.yml 
Management Group Structure: built off, agency.display_name Azure Landing Zone (ALZ) Customisation config

2.5 ALZ Customisation HL : Key Features
Single Source of Truth: All agency-specific values in one YAML file
Template-Driven: Everything generates from templates using the config
Multi-Agency Ready: Easy switching between different agencies
Terraform Integration: Config values flow directly into Terraform modules
Validation: Schema validation prevents configuration errors
Automation: Scripts handle generation and switching

3.0 ent-alz-project-artefacts-build-purposes-only
3.1 ALZ-DD-Workbook-checkpoint
3.2 rbac-custom-roles-ndis
3.3 NDIA ALZ Customisation-050625
3.4 networking_rbac_matrices
3.5 alz_config_structure
3.6 Build the Terraform Module 

4 Build Environment Planning
4.1 Core ALZ Personas (from ALZ-DD-Workbook)
4.2 Workload-Specific Personas (from same workbook)
4.3 Enhanced Personas
4.4 Networking service access matrices. 
    Dynamic RBAC roles: based on the personas defined in config
    Agency-specific policy names: using the naming standards
    Scoped permissions: aligned to the management group structure
4.5 A. Build the Terraform Module - Create the actual .tf files to deploy these roles
    B. Add Policy Integration - Connect these roles to your Essential 8 policies
    C. Create Assignment Patterns - Show how to assign roles to AAD groups
    D. Extend to Other Services - Apply same pattern to compute, storage, security services
    E. Build Compliance Dashboards - Monitor role usage and access patterns
    F. DevOps Integration - CI/CD pipeline for role deployment

====
# ALZ NDIS – Custom RBAC & Networking Overlay

This repository delivers a tailored Azure Landing Zone (ALZ) overlay for the **NDIS** (National Disability Insurance Scheme), with a focus on:
- Custom **RBAC Roles** for separation of duties and least privilege access
- Australian **ISM-aligned** access control and accountability patterns
- Core **Network Services** using the Enterprise-Scale Hub & Spoke model
- Enforcement pipeline using **Enterprise Azure Policy as Code (EPAC)**

---

## Scope

| Category                     | Description                                                                 |
|-----------------------------|-----------------------------------------------------------------------------|
| Azure Frameworks            | ALZ, EPAC, Microsoft CAF                                                    |
| Compliance Alignment        | Australian ISM                                                              |
| Governance & Ops Model      | Custom RBAC Roles, Role Separation                                          |
| Network Services            | DNS, NSGs, Azure Firewall, Bastion, Routing, DDoS                           |
| Patterns Supported          | Hub & Spoke, Decentralised App Ownership                                    |
| Lifecycle Management        | GitHub Actions-based EPAC policy lifecycle                                  |

NDIA ALZ Customisation, including:
README.md
_index.md
decisions/ folder with 8 ADR files

Folder: decisions/
Contains:
0002-management-group-hierarchy.md
0003-subscription-design.md
0004-tagging-standard.md
0005-landing-zone-automation.md
0006-policy-architecture.md
0007-identity-architecture.md
0008-network-topology.md
0009-monitoring-compliance.md
(Each populated as per the earlier ADR markdowns.)

Azure Policy definitions & initiatives for enforcement of tagging, security, network, and compliance guardrails.
Terraform modules for:
Management Group and subscription vending
Role assignments and RBAC
Policy assignment automation
Networking (hub-and-spoke VNet peering, firewall rules)
Identity infrastructure (PIM, CA policies)

Azure Policy built-in policy definitions for Azure networking services
Azure Networking Services and Corresponding Azure Policy Resource Types
Networking Service				Azure Policy Resource Type	Description
Virtual Network (VNet)			Microsoft.Network/virtualNetworks		Manages virtual networks, subnets, and related configurations.
Network Security Group (NSG)	Microsoft.Network/networkSecurityGroups	Controls inbound and outbound traffic at the subnet or NIC level.
Private Link / Private Endpoint	Microsoft.Network/privateEndpoints		Enables private connectivity to Azure services over the Azure backbone network.
Azure Firewall					Microsoft.Network/azureFirewalls		Provides stateful firewall capabilities for network traffic control.
Application Gateway (WAF)		Microsoft.Network/applicationGateways	Offers application-level routing and Web Application Firewall (WAF) features.
Load Balancer					Microsoft.Network/loadBalancers			Distributes network traffic across multiple resources for high availability.
VPN Gateway						Microsoft.Network/virtualNetworkGatewaysFacilitates secure cross-premises connectivity via VPN tunnels.
ExpressRoute					Microsoft.Network/expressRouteCircuits	Establishes private connections between Azure and on-premises networks.
Network Watcher					Microsoft.Network/networkWatchers		Provides monitoring and diagnostic tools for network performance and health.
Route Table (UDR)				Microsoft.Network/routeTables			Defines custom routing rules for network traffic within Azure.
DDoS Protection Plan			Microsoft.Network/ddosProtectionPlans	Offers protection against Distributed Denial of Service (DDoS) attacks.
Azure Bastion					Microsoft.Network/bastionHosts			Enables secure and seamless RDP/SSH connectivity to virtual machines.
Virtual Network Manager			Microsoft.Network/networkManagers		Centralizes management of network topologies and security configurations.

----
Terraform Module: Key Features
----
1. Persona-Based Role Definitions
PlatformOwner: Full network control at management group level
NetworkAdmin: Comprehensive network management for shared platform
WorkloadOwner: Application-scoped network permissions with restrictions
SecurityOperator: Read-only security monitoring across all zones
Auditor: Read-only compliance and audit access

2. Granular Permission Matrices
Each role includes precisely the networking permissions from your matrices:
VNet, NSG, Firewall management with appropriate scope restrictions
Private Link, Load Balancer, Application Gateway access for app teams
Network Watcher, Flow Logs for security monitoring
Policy and compliance read access for auditors

3. ALZ-Aligned Scope Assignment
Roles assigned to appropriate management groups (ndia, ndia-platform, ndia-apps)
Follows your established ALZ hierarchy
Supports both single and multi-scope assignments

4. Enterprise-Ready Features
Conditional AAD group assignments (disabled by default for safety)
Comprehensive tagging for compliance tracking
Customizable agency configuration
Deployment scripts and examples included
----

Appendix

Customisation build outcomes | Running build log
3.4 | 	Networking Service Access Matrices & Dynamic RBAC Generation
		Detailed Permission Matrices by Persona
			Role (scope), defines the permissions or actions('Network Services') and assignable scopes
				ndia_Role_PlatformOwner
				scope:
				permissions:
					actions:
						- "Microsoft.Network/*"
						- "Microsoft.Authorization/roleAssignments/read"
						- "Microsoft.Authorization/policyAssignments/*"
						- "Microsoft.Resources/deployments/*"
						- "Microsoft.Resources/subscriptions/resourceGroups/*"
				assignable_scopes:
				  - "/providers/Microsoft.Management/managementGroups/ndia"
		Service-Specific Access Patterns
			Critical Network Services Access Control
				Azure Firewall - Tier 0 Control
				VNet Peering - Hub-Spoke Control
				NSG Rules - Workload Boundaries
		Usage Examoples
			1. Generate Roles
			2. Assign Roles to Teams
			3. Monitor Role Usage
3.5 |	ALZ Configuration Structure & Integration
		Identity
		Compliance & Governance
		Azure Environment
		Management Group Hierarchy
		Naming Standards
		Environments
		Workloads
		Required Tags
		RBAC Personas
		Networking Configuration
		Security Configuration
		Cost Management
		Monitoring & Logging
		Terraform Integration : Setup New Agency, Generate & Deploy, Switch Between Agencies
3.6 | 	Option A: Build the Terraform Module | terraform_modules_ndia-networking-rbac_main.tf
			5 Custom RBAC roles following your exact permission matrices
			Zero-trust networking access with least-privilege principles
			ISM/Essential 8 compliance with proper separation of duties
			Audit trail with comprehensive tagging and logging
			Scalable foundation for extending to other Azure services
		   terraform/modules/ndia-networking-rbac/variables.tf
3.7 |   Oprion B: Add Policy Integration | 

Quick Deployment Guide
# 1. Clone and navigate to the module
cd terraform/examples/<agency>-deployment

# 2. Configure your environment
cp terraform.tfvars.example terraform.tfvars
# Edit with your subscription/tenant IDs

# 3. Deploy roles only (safe first step)
terraform init
terraform plan
terraform apply

# 4. Later, enable AAD assignments
# Set enable_aad_assignments = true in terraform.tfvars
